/*
 * generated by Xtext
 */
grammar InternalBlorqueScript;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.blorquescript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.blorquescript.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.blorquescript.services.BlorqueScriptGrammarAccess;

}

@parser::members {

 	private BlorqueScriptGrammarAccess grammarAccess;
 	
    public InternalBlorqueScriptParser(TokenStream input, BlorqueScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "BSFile";	
   	}
   	
   	@Override
   	protected BlorqueScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleBSFile
entryRuleBSFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSFileRule()); }
	 iv_ruleBSFile=ruleBSFile 
	 { $current=$iv_ruleBSFile.current; } 
	 EOF 
;

// Rule BSFile
ruleBSFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBSFileAccess().getPackageKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSFileAccess().getNameQualifiedNameParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSFileRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSFileAccess().getSemicolonKeyword_0_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBSFileAccess().getImportsBSImportParserRuleCall_1_0()); 
	    }
		lv_imports_3_0=ruleBSImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSFileRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"BSImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getBSFileAccess().getClassesBSClassParserRuleCall_2_0()); 
	    }
		lv_classes_4_0=ruleBSClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSFileRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_4_0, 
        		"BSClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleBSImport
entryRuleBSImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSImportRule()); }
	 iv_ruleBSImport=ruleBSImport 
	 { $current=$iv_ruleBSImport.current; } 
	 EOF 
;

// Rule BSImport
ruleBSImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBSImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSImportAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleBSClass
entryRuleBSClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSClassRule()); }
	 iv_ruleBSClass=ruleBSClass 
	 { $current=$iv_ruleBSClass.current; } 
	 EOF 
;

// Rule BSClass
ruleBSClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBSClassAccess().getClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBSClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSClassAccess().getColonKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBSClassAccess().getSuperclassBSClassCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBSClassAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSClassAccess().getMembersBSMemberParserRuleCall_4_0()); 
	    }
		lv_members_5_0=ruleBSMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSClassRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"BSMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBSClassAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleBSMember
entryRuleBSMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSMemberRule()); }
	 iv_ruleBSMember=ruleBSMember 
	 { $current=$iv_ruleBSMember.current; } 
	 EOF 
;

// Rule BSMember
ruleBSMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBSMemberAccess().getBSFieldParserRuleCall_0()); 
    }
    this_BSField_0=ruleBSField
    { 
        $current = $this_BSField_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBSMemberAccess().getBSMethodParserRuleCall_1()); 
    }
    this_BSMethod_1=ruleBSMethod
    { 
        $current = $this_BSMethod_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBSField
entryRuleBSField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSFieldRule()); }
	 iv_ruleBSField=ruleBSField 
	 { $current=$iv_ruleBSField.current; } 
	 EOF 
;

// Rule BSField
ruleBSField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSFieldRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBSFieldAccess().getTypeBSClassCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBSFieldAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSFieldAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleBSMethod
entryRuleBSMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSMethodRule()); }
	 iv_ruleBSMethod=ruleBSMethod 
	 { $current=$iv_ruleBSMethod.current; } 
	 EOF 
;

// Rule BSMethod
ruleBSMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSMethodRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBSMethodAccess().getTypeBSClassCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBSMethodAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSMethodAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getBSMethodAccess().getParamsBSParameterParserRuleCall_3_0_0()); 
	    }
		lv_params_3_0=ruleBSParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"BSParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBSMethodAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSMethodAccess().getParamsBSParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_params_5_0=ruleBSParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"BSParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBSMethodAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSMethodAccess().getBodyBSMethodBodyParserRuleCall_5_0()); 
	    }
		lv_body_7_0=ruleBSMethodBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSMethodRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"BSMethodBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBSParameter
entryRuleBSParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSParameterRule()); }
	 iv_ruleBSParameter=ruleBSParameter 
	 { $current=$iv_ruleBSParameter.current; } 
	 EOF 
;

// Rule BSParameter
ruleBSParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBSParameterAccess().getTypeBSClassCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBSParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleBSMethodBody
entryRuleBSMethodBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSMethodBodyRule()); }
	 iv_ruleBSMethodBody=ruleBSMethodBody 
	 { $current=$iv_ruleBSMethodBody.current; } 
	 EOF 
;

// Rule BSMethodBody
ruleBSMethodBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSMethodBodyAccess().getBSMethodBodyAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBSMethodBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSMethodBodyAccess().getStatementsBSStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleBSStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSMethodBodyRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"BSStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBSMethodBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleBSStatement
entryRuleBSStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSStatementRule()); }
	 iv_ruleBSStatement=ruleBSStatement 
	 { $current=$iv_ruleBSStatement.current; } 
	 EOF 
;

// Rule BSStatement
ruleBSStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBSStatementAccess().getBSVariableDeclarationParserRuleCall_0()); 
    }
    this_BSVariableDeclaration_0=ruleBSVariableDeclaration
    { 
        $current = $this_BSVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBSStatementAccess().getBSReturnParserRuleCall_1()); 
    }
    this_BSReturn_1=ruleBSReturn
    { 
        $current = $this_BSReturn_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getBSStatementAccess().getBSExpressionParserRuleCall_2_0()); 
    }
    this_BSExpression_2=ruleBSExpression
    { 
        $current = $this_BSExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBSStatementAccess().getSemicolonKeyword_2_1());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getBSStatementAccess().getBSIfStatementParserRuleCall_3()); 
    }
    this_BSIfStatement_4=ruleBSIfStatement
    { 
        $current = $this_BSIfStatement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBSReturn
entryRuleBSReturn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSReturnRule()); }
	 iv_ruleBSReturn=ruleBSReturn 
	 { $current=$iv_ruleBSReturn.current; } 
	 EOF 
;

// Rule BSReturn
ruleBSReturn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='return' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBSReturnAccess().getReturnKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSReturnAccess().getExpressionBSExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSReturnRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSReturnAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleBSVariableDeclaration
entryRuleBSVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSVariableDeclarationRule()); }
	 iv_ruleBSVariableDeclaration=ruleBSVariableDeclaration 
	 { $current=$iv_ruleBSVariableDeclaration.current; } 
	 EOF 
;

// Rule BSVariableDeclaration
ruleBSVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSVariableDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBSVariableDeclarationAccess().getTypeBSClassCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBSVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSVariableDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSVariableDeclarationAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSVariableDeclarationAccess().getExpressionBSExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBSVariableDeclarationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleBSIfStatement
entryRuleBSIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSIfStatementRule()); }
	 iv_ruleBSIfStatement=ruleBSIfStatement 
	 { $current=$iv_ruleBSIfStatement.current; } 
	 EOF 
;

// Rule BSIfStatement
ruleBSIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBSIfStatementAccess().getIfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBSIfStatementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSIfStatementAccess().getExpressionBSExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSIfStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBSIfStatementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSIfStatementAccess().getThenBlockBSIfBlockParserRuleCall_4_0()); 
	    }
		lv_thenBlock_4_0=ruleBSIfBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSIfStatementRule());
	        }
       		set(
       			$current, 
       			"thenBlock",
        		lv_thenBlock_4_0, 
        		"BSIfBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBSIfStatementAccess().getElseKeyword_5_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBSIfStatementAccess().getElseBlockBSIfBlockParserRuleCall_5_1_0()); 
	    }
		lv_elseBlock_6_0=ruleBSIfBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSIfStatementRule());
	        }
       		set(
       			$current, 
       			"elseBlock",
        		lv_elseBlock_6_0, 
        		"BSIfBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleBSIfBlock
entryRuleBSIfBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSIfBlockRule()); }
	 iv_ruleBSIfBlock=ruleBSIfBlock 
	 { $current=$iv_ruleBSIfBlock.current; } 
	 EOF 
;

// Rule BSIfBlock
ruleBSIfBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBSIfBlockAccess().getStatementsBSStatementParserRuleCall_0_0()); 
	    }
		lv_statements_0_0=ruleBSStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSIfBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_0_0, 
        		"BSStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBSIfBlockAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSIfBlockAccess().getStatementsBSStatementParserRuleCall_1_1_0()); 
	    }
		lv_statements_2_0=ruleBSStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSIfBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"BSStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBSIfBlockAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;









// Entry rule entryRuleBSExpression
entryRuleBSExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSExpressionRule()); }
	 iv_ruleBSExpression=ruleBSExpression 
	 { $current=$iv_ruleBSExpression.current; } 
	 EOF 
;

// Rule BSExpression
ruleBSExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBSExpressionAccess().getBSAssignmentParserRuleCall()); 
    }
    this_BSAssignment_0=ruleBSAssignment
    { 
        $current = $this_BSAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleBSAssignment
entryRuleBSAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSAssignmentRule()); }
	 iv_ruleBSAssignment=ruleBSAssignment 
	 { $current=$iv_ruleBSAssignment.current; } 
	 EOF 
;

// Rule BSAssignment
ruleBSAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getBSAssignmentAccess().getBSCastingExpressionParserRuleCall_0_0()); 
    }
    this_BSCastingExpression_0=ruleBSCastingExpression
    { 
        $current = $this_BSCastingExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBSAssignmentAccess().getBSSelectionExpressionParserRuleCall_0_1()); 
    }
    this_BSSelectionExpression_1=ruleBSSelectionExpression
    { 
        $current = $this_BSSelectionExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBSAssignmentAccess().getBSAssignmentLeftAction_1_0(),
            $current);
    }
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBSAssignmentAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSAssignmentAccess().getRightBSExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_4_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSAssignmentRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleBSCastingExpression
entryRuleBSCastingExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSCastingExpressionRule()); }
	 iv_ruleBSCastingExpression=ruleBSCastingExpression 
	 { $current=$iv_ruleBSCastingExpression.current; } 
	 EOF 
;

// Rule BSCastingExpression
ruleBSCastingExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBSCastingExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
(
		lv_castType_1_1=	'string' 
    {
        newLeafNode(lv_castType_1_1, grammarAccess.getBSCastingExpressionAccess().getCastTypeStringKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSCastingExpressionRule());
	        }
       		setWithLastConsumed($current, "castType", lv_castType_1_1, null);
	    }

    |		lv_castType_1_2=	'number' 
    {
        newLeafNode(lv_castType_1_2, grammarAccess.getBSCastingExpressionAccess().getCastTypeNumberKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSCastingExpressionRule());
	        }
       		setWithLastConsumed($current, "castType", lv_castType_1_2, null);
	    }

    |		lv_castType_1_3=	'object' 
    {
        newLeafNode(lv_castType_1_3, grammarAccess.getBSCastingExpressionAccess().getCastTypeObjectKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSCastingExpressionRule());
	        }
       		setWithLastConsumed($current, "castType", lv_castType_1_3, null);
	    }

)

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSCastingExpressionAccess().getRightParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSCastingExpressionAccess().getCastExprBSSelectionExpressionParserRuleCall_3_0()); 
	    }
		lv_castExpr_3_0=ruleBSSelectionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSCastingExpressionRule());
	        }
       		set(
       			$current, 
       			"castExpr",
        		lv_castExpr_3_0, 
        		"BSSelectionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBSSelectionExpression
entryRuleBSSelectionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSSelectionExpressionRule()); }
	 iv_ruleBSSelectionExpression=ruleBSSelectionExpression 
	 { $current=$iv_ruleBSSelectionExpression.current; } 
	 EOF 
;

// Rule BSSelectionExpression
ruleBSSelectionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBSSelectionExpressionAccess().getBSTerminalExpressionParserRuleCall_0()); 
    }
    this_BSTerminalExpression_0=ruleBSTerminalExpression
    { 
        $current = $this_BSTerminalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBSSelectionExpressionAccess().getBSMemberSelectionReceiverAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBSSelectionExpressionAccess().getFullStopKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSSelectionExpressionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getBSSelectionExpressionAccess().getMemberBSMemberCrossReference_1_2_0()); 
	}

)
)((
(
		lv_methodinvocation_4_0=	'(' 
    {
        newLeafNode(lv_methodinvocation_4_0, grammarAccess.getBSSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSSelectionExpressionRule());
	        }
       		setWithLastConsumed($current, "methodinvocation", true, "(");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getBSSelectionExpressionAccess().getArgsBSExpressionParserRuleCall_1_3_1_0_0()); 
	    }
		lv_args_5_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSSelectionExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBSSelectionExpressionAccess().getCommaKeyword_1_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSSelectionExpressionAccess().getArgsBSExpressionParserRuleCall_1_3_1_1_1_0()); 
	    }
		lv_args_7_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSSelectionExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_7_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBSSelectionExpressionAccess().getRightParenthesisKeyword_1_3_2());
    }
)?)*)
;





// Entry rule entryRuleBSTerminalExpression
entryRuleBSTerminalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBSTerminalExpressionRule()); }
	 iv_ruleBSTerminalExpression=ruleBSTerminalExpression 
	 { $current=$iv_ruleBSTerminalExpression.current; } 
	 EOF 
;

// Rule BSTerminalExpression
ruleBSTerminalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSStringConstantAction_0_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getBSTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSNumberConstantAction_1_0(),
            $current);
    }
)(
(
		lv_value_3_0=RULE_INT
		{
			newLeafNode(lv_value_3_0, grammarAccess.getBSTerminalExpressionAccess().getValueINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSBooleanConstantAction_2_0(),
            $current);
    }
)(
(
(
		lv_value_5_1=	'true' 
    {
        newLeafNode(lv_value_5_1, grammarAccess.getBSTerminalExpressionAccess().getValueTrueKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_5_1, null);
	    }

    |		lv_value_5_2=	'false' 
    {
        newLeafNode(lv_value_5_2, grammarAccess.getBSTerminalExpressionAccess().getValueFalseKeyword_2_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_5_2, null);
	    }

)

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSNullAction_3_0(),
            $current);
    }
)	otherlv_7='null' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBSTerminalExpressionAccess().getNullKeyword_3_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSThisAction_4_0(),
            $current);
    }
)	otherlv_9='this' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBSTerminalExpressionAccess().getThisKeyword_4_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSClientAction_5_0(),
            $current);
    }
)	otherlv_11='client' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBSTerminalExpressionAccess().getClientKeyword_5_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSSymbolRefAction_6_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getBSTerminalExpressionAccess().getSymbolBSSymbolCrossReference_6_1_0()); 
	}

)
)(((
(
	'(' 
 

)
)=>
(
		lv_methodinvocation_14_0=	'(' 
    {
        newLeafNode(lv_methodinvocation_14_0, grammarAccess.getBSTerminalExpressionAccess().getMethodinvocationLeftParenthesisKeyword_6_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
       		setWithLastConsumed($current, "methodinvocation", true, "(");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getBSTerminalExpressionAccess().getArgsBSExpressionParserRuleCall_6_2_1_0_0()); 
	    }
		lv_args_15_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSTerminalExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_15_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBSTerminalExpressionAccess().getCommaKeyword_6_2_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSTerminalExpressionAccess().getArgsBSExpressionParserRuleCall_6_2_1_1_1_0()); 
	    }
		lv_args_17_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSTerminalExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_17_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBSTerminalExpressionAccess().getRightParenthesisKeyword_6_2_2());
    }
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBSTerminalExpressionAccess().getBSNewAction_7_0(),
            $current);
    }
)	otherlv_20='new' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getBSTerminalExpressionAccess().getNewKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBSTerminalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBSTerminalExpressionAccess().getTypeBSClassCrossReference_7_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_22='(' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getBSTerminalExpressionAccess().getLeftParenthesisKeyword_7_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getBSTerminalExpressionAccess().getArgsBSExpressionParserRuleCall_7_4_0_0()); 
	    }
		lv_args_23_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSTerminalExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_23_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getBSTerminalExpressionAccess().getCommaKeyword_7_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBSTerminalExpressionAccess().getArgsBSExpressionParserRuleCall_7_4_1_1_0()); 
	    }
		lv_args_25_0=ruleBSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBSTerminalExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_25_0, 
        		"BSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_26=')' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getBSTerminalExpressionAccess().getRightParenthesisKeyword_7_5());
    }
)
    |(	otherlv_27='(' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getBSTerminalExpressionAccess().getLeftParenthesisKeyword_8_0());
    }

    { 
        newCompositeNode(grammarAccess.getBSTerminalExpressionAccess().getBSExpressionParserRuleCall_8_1()); 
    }
    this_BSExpression_28=ruleBSExpression
    { 
        $current = $this_BSExpression_28.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_29=')' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getBSTerminalExpressionAccess().getRightParenthesisKeyword_8_2());
    }
))
;





RULE_ID : '$'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|':')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


